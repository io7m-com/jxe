<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE module PUBLIC
  "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
  "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!--
 Copyright Â© 2018 Mark Raynsford <code@io7m.com>

 Permission to use, copy, modify, and/or distribute this software for any
 purpose with or without fee is hereby granted, provided that the above
 copyright notice and this permission notice appear in all copies.

 THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR
 IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
-->

<module name="Checker">
  <property name="severity" value="error"/>

  <!-- Exclude module-info.java files from processing -->
  <module name="BeforeExecutionExclusionFileFilter">
    <property name="fileNamePattern" value="module\-info\.java$"/>
  </module>

  <module name="TreeWalker">

    <!-- Allow control of Javadoc checks with CHECKSTYLE_JAVADOC:ON and CHECKSTYLE_JAVADOC:OFF -->
    <module name="SuppressionCommentFilter">
      <property name="onCommentFormat" value="CHECKSTYLE_JAVADOC:ON"/>
      <property name="offCommentFormat" value="CHECKSTYLE_JAVADOC:OFF"/>
      <property name="checkFormat" value="Javadoc.*"/>
    </module>

    <!-- Allow control of spacing checks with CHECKSTYLE_SPACE:ON and CHECKSTYLE_SPACE:OFF -->
    <module name="SuppressionCommentFilter">
      <property name="onCommentFormat" value="CHECKSTYLE_SPACE:ON"/>
      <property name="offCommentFormat" value="CHECKSTYLE_SPACE:OFF"/>
      <property name="checkFormat" value="NoWhitespaceAfter"/>
    </module>

    <!-- Allow control of all checks with CHECKSTYLE:ON and CHECKSTYLE:OFF -->
    <module name="SuppressionCommentFilter">
      <property name="onCommentFormat" value="CHECKSTYLE:ON"/>
      <property name="offCommentFormat" value="CHECKSTYLE:OFF"/>
      <property name="checkFormat" value=".*"/>
    </module>

    <!--
      Don't require any particular abstract class naming.

      http://checkstyle.sourceforge.net/config_naming.html#AbstractClassName
    <module name="AbstractClassName"/>
    -->

    <!--
      Don't do any particular annotation checking.

      http://checkstyle.sourceforge.net/config_annotation.html#AnnotationUseStyle
    <module name="AnnotationUseStyle"/>
    -->

    <!--
      Require that anonymous inner classes are less than 150 lines.

      http://checkstyle.sourceforge.net/config_sizes.html#AnonInnerLength
    -->
    <module name="AnonInnerLength">
      <property name="max" value="150"/>
    </module>

    <!--
      Checks for long anonymous inner classes.

      http://checkstyle.sourceforge.net/config_sizes.html#AnonInnerLength
    -->
    <module name="AnonInnerLength">
      <property name="max" value="20"/>
    </module>

    <!--
      Checks if array initialization contains optional trailing comma.

      http://checkstyle.sourceforge.net/config_coding.html#ArrayTrailingComma
    -->
    <module name="ArrayTrailingComma"/>

    <!--
      Checks the style of array type definitions.

      http://checkstyle.sourceforge.net/config_misc.html#ArrayTypeStyle
    -->
    <module name="ArrayTypeStyle"/>

    <!--
      Detects inline conditionals.

      http://checkstyle.sourceforge.net/config_coding.html#AvoidInlineConditionals
    <module name="AvoidInlineConditionals"/>
    -->

    <!--
      Finds nested blocks.

      http://checkstyle.sourceforge.net/config_blocks.html#AvoidNestedBlocks
    <module name="AvoidNestedBlocks"/>
    -->

    <!--
      Check that finds import statements that use the * notation.

      http://checkstyle.sourceforge.net/config_imports.html#AvoidStarImport
    -->
    <module name="AvoidStarImport"/>

    <!--
      Check that finds static imports.

      http://checkstyle.sourceforge.net/config_imports.html#AvoidStaticImport
    <module name="AvoidStaticImport"/>
    -->

    <!--
      Avoid overly complex boolean expressions.

      http://checkstyle.sourceforge.net/config_metrics.html#BooleanExpressionComplexity
    -->
    <module name="BooleanExpressionComplexity"/>

    <!--
      This metric measures the number of instantiations of other classes within
      the given class.

      http://checkstyle.sourceforge.net/config_metrics.html#ClassDataAbstractionCoupling
    -->
    <module name="ClassDataAbstractionCoupling">
      <property name="max" value="35"/>
    </module>

    <!--
      The number of other classes a given class relies on.

      http://checkstyle.sourceforge.net/config_metrics.html#ClassFanOutComplexity
    -->
    <module name="ClassFanOutComplexity">
      <property name="max" value="125"/>
    </module>

    <!--
      Enforce type parameter name formats.

      http://checkstyle.sourceforge.net/config_naming.html#ClassTypeParameterName
    -->
    <module name="ClassTypeParameterName">
      <property name="format" value="^([A-Z][A-Z0-9_]*|_)$"/>
    </module>

    <!--
      Controls the indentation between comments and surrounding code.

      http://checkstyle.sourceforge.net/config_misc.html#CommentsIndentation
    -->
    <module name="CommentsIndentation"/>

    <!--
      Checks that constant names conform to a format specified by the format
      property.

      http://checkstyle.sourceforge.net/config_naming.html#ConstantName
    -->
    <module name="ConstantName"/>

    <!--
      Checks that if a class defines a covariant method equals, then it defines
      method equals(java.lang.Object).

      http://checkstyle.sourceforge.net/config_coding.html#CovariantEquals
    -->
    <module name="CovariantEquals"/>

    <!--
      Enforce a maximum level of cyclomatic complexity

      http://checkstyle.sourceforge.net/config_metrics.html#CyclomaticComplexity
    -->
    <module name="CyclomaticComplexity">
      <property name="max" value="15"/>
    </module>

    <!--
      Checks that the parts of a class or interface declaration appear in the
      order suggested by the Code Conventions for the Java Programming Language.

      http://checkstyle.sourceforge.net/config_coding.html#DeclarationOrder
    <module name="DeclarationOrder"/>
    -->

    <!--
      Check that the default is after all the cases in a switch statement.

      http://checkstyle.sourceforge.net/config_coding.html#DefaultComesLast
    -->
    <module name="DefaultComesLast"/>

    <!--
      Checks for restricted tokens beneath other tokens.

      http://checkstyle.sourceforge.net/config_misc.html#DescendantToken
    -->
    <module name="DescendantToken"/>

    <!--
      Checks that classes are designed for inheritance.

      http://checkstyle.sourceforge.net/config_design.html#DesignForExtension
    -->
    <module name="DesignForExtension"/>

    <!--
      Checks for empty catch blocks with few options to skip violation.

      http://checkstyle.sourceforge.net/config_blocks.html#EmptyCatchBlock
    -->
    <module name="EmptyBlock">
      <property name="option" value="text"/>
    </module>

    <!--
      Require that empty blocks contain either a statement or an explanatory
      comment.

      http://checkstyle.sourceforge.net/config_blocks.html#EmptyBlock
    -->
    <module name="EmptyCatchBlock"/>

    <!--
      Checks the padding of an empty for initializer; that is whether a space
      is required at an empty for initializer, or such spaces are forbidden.

      http://checkstyle.sourceforge.net/config_whitespace.html#EmptyForInitializerPad
    -->
    <module name="EmptyForInitializerPad">
      <property name="option" value="nospace"/>
    </module>

    <!--
      Checks the padding of an empty for iterator; that is whether a space is
      required at an empty for iterator, or such spaces are forbidden.

      http://checkstyle.sourceforge.net/config_whitespace.html#EmptyForIteratorPad
    -->
    <module name="EmptyForIteratorPad">
      <property name="option" value="nospace"/>
    </module>

    <!--
      Checks for blank line separators.

      http://checkstyle.sourceforge.net/config_whitespace.html#EmptyLineSeparator
    <module name="EmptyStatement"/>
    -->

    <!--
      Detects empty statements (standalone ';').

      http://checkstyle.sourceforge.net/config_coding.html#EmptyStatement
    -->
    <module name="EmptyStatement"/>

    <!--
      Checks that any combination of String literals is on the left side of an
      equals() comparison.

      http://checkstyle.sourceforge.net/config_coding.html#EqualsAvoidNull
    -->
    <module name="EqualsAvoidNull"/>

    <!--
      Checks that classes that override equals() also override hashCode().

      http://checkstyle.sourceforge.net/config_coding.html#EqualsHashCode
    -->
    <module name="EqualsHashCode"/>

    <!--
      Restricts the number of executable statements to a specified limit.

      http://checkstyle.sourceforge.net/config_sizes.html#ExecutableStatementCount
    -->
    <module name="ExecutableStatementCount">
      <property name="max" value="50"/>
    </module>

    <!--
      Checks if any class or object member explicitly initialized to default for
       its type value (null for object references, zero for numeric types and
       char and false for boolean.

       http://checkstyle.sourceforge.net/config_coding.html#ExplicitInitialization
    -->
    <module name="ExplicitInitialization"/>

    <!--
      Checks for fall through in switch statements Finds locations where a case
      contains Java code - but lacks a break, return, throw or continue statement.

      http://checkstyle.sourceforge.net/config_coding.html#FallThrough
    -->
    <module name="FallThrough"/>

    <!--
      Checks that class which has only private constructors is declared as final.

      http://checkstyle.sourceforge.net/config_design.html#FinalClass
    -->
    <module name="FinalClass"/>

    <!--
       Ensures that local variables that never get their values changed, must
       be declared final.

       http://checkstyle.sourceforge.net/config_coding.html#FinalLocalVariable
    -->
    <module name="FinalLocalVariable"/>

    <!--
      Check that method/constructor/catch/foreach parameters are final.

      http://checkstyle.sourceforge.net/config_misc.html#FinalParameters
    -->
    <module name="FinalParameters"/>

    <!--
      Checks that the whitespace around the Generic tokens < and > are correct
      to the typical convention.

      http://checkstyle.sourceforge.net/config_whitespace.html#GenericWhitespace
    -->
    <module name="GenericWhitespace"/>

    <!--
      Checks that a local variable or a parameter does not shadow a field that
       is defined in the same class.

      http://checkstyle.sourceforge.net/config_coding.html#HiddenField
    -->
    <module name="HiddenField"/>

    <!--
      Make sure that utility classes (classes that contain only static methods)
      do not have a public constructor.

      http://checkstyle.sourceforge.net/config_design.html#HideUtilityClassConstructor
    -->
    <module name="HideUtilityClassConstructor"/>

    <!--
    <module name="IllegalCatch"/>
    -->

    <!--

    -->
    <module name="IllegalImport"/>

    <!--
     Checks for illegal instantiations where a factory method is preferred.

     http://checkstyle.sourceforge.net/config_coding.html#IllegalInstantiation
    -->
    <module name="IllegalInstantiation">
      <property name="classes" value="java.lang.Boolean"/>
      <property name="classes" value="java.lang.Integer"/>
      <property name="classes" value="java.lang.Double"/>
      <property name="classes" value="java.lang.Float"/>
      <property name="classes" value="java.lang.Long"/>
      <property name="classes" value="java.lang.String"/>
    </module>

    <!--
      Throwing java.lang.Error or java.lang.RuntimeException is almost never
      acceptable.

      http://checkstyle.sourceforge.net/config_coding.html#IllegalThrows
    -->
    <module name="IllegalThrows"/>

    <!--
      Checks for illegal tokens.

      http://checkstyle.sourceforge.net/config_coding.html#IllegalToken
    -->
    <module name="IllegalToken">
      <property name="tokens" value="POST_INC,POST_DEC"/>
    </module>

    <!--
       Checks for illegal token text.

       http://checkstyle.sourceforge.net/config_coding.html#IllegalTokenText
    <module name="IllegalTokenText"/>
    -->

    <!--
    <module name="IllegalType"/>
    -->

    <!--
    <module name="ImportControl"/>
    -->

    <!--
    <module name="ImportOrder"/>
    -->

    <!--
    <module name="Indentation"/>
    -->

    <!--
      Checks for assignments in subexpressions, such as in
       String s = Integer.toString(i = 2);.

      http://checkstyle.sourceforge.net/config_coding.html#InnerAssignment
    -->
    <module name="InnerAssignment"/>

    <!--
    <module name="InnerTypeLast"/>
    -->

    <!--
      Implements Bloch, Effective Java, Item 17 - Use Interfaces only to
       define types.

      http://checkstyle.sourceforge.net/config_design.html#InterfaceIsType
    -->
    <module name="InterfaceIsType"/>

    <!--
      This check calculates the Non Commenting Source Statements (NCSS)
      metric for Java source files and methods.

      http://checkstyle.sourceforge.net/config_metrics.html#JavaNCSS
    -->
    <module name="JavaNCSS">
      <property name="methodMaximum" value="100"/>
    </module>

    <!--
      Checks the Javadoc of a method or constructor.

      http://checkstyle.sourceforge.net/config_javadoc.html#JavadocMethod
    -->
    <module name="JavadocMethod">
      <property name="scope" value="public"/>
    </module>

    <!--
      Checks the Javadoc of a type.

      http://checkstyle.sourceforge.net/config_javadoc.html#JavadocType
    -->
    <module name="JavadocType">
      <property name="scope" value="public"/>
    </module>

    <!--
      Checks that a variable has Javadoc comment.

      http://checkstyle.sourceforge.net/config_javadoc.html#JavadocVariable
    -->
    <module name="JavadocVariable">
      <property name="scope" value="public"/>
    </module>

    <!--
      Checks the placement of left curly braces on types, methods and other
      blocks.

      http://checkstyle.sourceforge.net/config_blocks.html#LeftCurly
    <module name="LeftCurly"/>
    -->


    <!--
      Checks for long lines.

      http://checkstyle.sourceforge.net/config_sizes.html#LineLength
    -->
    <module name="LineLength">
      <property name="max" value="120"/>
    </module>

    <!--
      Checks that local final variable names conform to a format specified by
      the format property.

      http://checkstyle.sourceforge.net/config_naming.html#LocalFinalVariableName
    -->
    <module name="LocalFinalVariableName">
      <property name="format" value="^([a-z][a-z0-9_]*|_)$"/>
    </module>

    <!--
      Checks that local, non-final variable names conform to a format specified
      by the format property.

      http://checkstyle.sourceforge.net/config_naming.html#LocalVariableName
    -->
    <module name="LocalVariableName">
      <property name="format" value="^([a-z][a-z0-9_]*|_)$"/>
    </module>

    <!--
    <module name="MagicNumber"/>
    -->

    <!--
      Checks that instance variable names conform to a format specified by the format property.

      http://checkstyle.sourceforge.net/config_naming.html#MemberName
    -->
    <module name="MemberName">
      <property name="format" value="^[a-z][a-z0-9_]*$"/>
    </module>

    <!--
      Checks the number of methods declared in each type declaration by access
      modifier or total count.

      http://checkstyle.sourceforge.net/config_sizes.html#MethodCount
    -->
    <module name="MethodCount">
      <property name="maxPublic" value="100"/>
      <property name="maxTotal" value="100"/>
      <property name="maxPackage" value="100"/>
    </module>

    <!--
      Checks that method names conform to a format specified by the format property.

      http://checkstyle.sourceforge.net/config_naming.html#MethodName
    -->
    <module name="MethodName">
      <property name="format" value="^[a-z][A-Za-z0-9_]*$"/>
    </module>

    <!--
      Checks the padding between the identifier of a method definition,
      constructor definition, method call, or constructor invocation; and the
      left parenthesis of the parameter list.

      http://checkstyle.sourceforge.net/config_whitespace.html#MethodParamPad
    -->
    <module name="MethodParamPad"/>

    <!--
      Checks that class type parameter names conform to a format specified by
      the format property.

      http://checkstyle.sourceforge.net/config_naming.html#MethodTypeParameterName
    -->
    <module name="MethodTypeParameterName">
      <property name="format" value="^[A-Z][A-Z0-9]*$"/>
    </module>

    <!--
      Checks that classes (except abstract ones) define a ctor and don't rely
      on the default one.

      http://checkstyle.sourceforge.net/config_coding.html#MissingCtor
    -->
    <module name="MissingCtor"/>

    <!--
      This class is used to verify that both the java.lang.Deprecated annotation
      is present and the @deprecated Javadoc tag is present when either is present.

      http://checkstyle.sourceforge.net/config_annotation.html#MissingDeprecated
    -->
    <module name="MissingDeprecated"/>

    <!--
      This class is used to verify that the java.lang.Override annotation is
      present when the {@inheritDoc} javadoc tag is present.

      http://checkstyle.sourceforge.net/config_annotation.html#MissingOverride
    -->
    <module name="MissingOverride"/>

    <!--
    <module name="MissingSwitchDefault"/>
    -->

    <!--
      Check for ensuring that for loop control variables are not modified
       inside the for block.

      http://checkstyle.sourceforge.net/config_coding.html#ModifiedControlVariable
    -->
    <module name="ModifiedControlVariable"/>

    <!--
    <module name="ModifierOrder"/>
    -->

    <!--
    <module name="MultipleStringLiterals"/>
    -->

    <!--
      Checks that each variable declaration is in its own statement and on its
       own line.

      http://checkstyle.sourceforge.net/config_coding.html#MultipleVariableDeclarations
    -->
    <module name="MultipleVariableDeclarations"/>

    <!--
      Ensures that exception classes (classes with names conforming to some
      regular expression and explicitly extending classes with names conforming
      to other regular expression) are immutable, that is, that they have only
      final fields.

      http://checkstyle.sourceforge.net/config_design.html#MutableException
    -->
    <module name="MutableException"/>

    <!--
      Checks the npath complexity against a specified limit.
    -->
    <module name="NPathComplexity">
      <property name="max" value="200"/>
    </module>

    <!--
      Checks for braces around code blocks.

      http://checkstyle.sourceforge.net/config_blocks.html#NeedBraces
    -->
    <module name="NeedBraces"/>

    <!--
      Restricts nested for blocks to a specified depth.

      http://checkstyle.sourceforge.net/config_coding.html#NestedForDepth
    -->
    <module name="NestedForDepth">
      <property name="max" value="2"/>
    </module>

    <!--
      Restricts nested if-else blocks to a specified depth.

      http://checkstyle.sourceforge.net/config_coding.html#NestedIfDepth
    -->
    <module name="NestedIfDepth">
      <property name="max" value="2"/>
    </module>

    <!--
      Restricts nested try-catch-finally blocks to a specified depth.

      http://checkstyle.sourceforge.net/config_coding.html#NestedTryDepth
    -->
    <module name="NestedTryDepth">
      <property name="max" value="3"/>
    </module>

    <!--
      Checks that the clone method is not overridden from the Object class.

      http://checkstyle.sourceforge.net/config_coding.html#NoClone
    -->
    <module name="NoClone"/>

    <!--
      Checks that no method having zero parameters is defined using the name
      finalize.

      http://checkstyle.sourceforge.net/config_coding.html#NoFinalizer
    -->
    <module name="NoFinalizer"/>

    <!--
       Checks that there is no whitespace after a token.

       http://checkstyle.sourceforge.net/config_whitespace.html#NoWhitespaceAfter
    -->
    <module name="NoWhitespaceAfter"/>

    <!--
      Checks that there is no whitespace before a token.

      http://checkstyle.sourceforge.net/config_whitespace.html#NoWhitespaceBefore
    -->
    <module name="NoWhitespaceBefore"/>

    <!--
      Checks that there is only one statement per line.

      http://checkstyle.sourceforge.net/config_coding.html#OneStatementPerLine
    -->
    <module name="OneStatementPerLine"/>

    <!--
      Checks that each top-level class, interfaces or enum resides in a source file of its own.

      http://checkstyle.sourceforge.net/config_design.html#OneTopLevelClass
    -->
    <module name="OneTopLevelClass"/>

    <!--
      Checks line wrapping for operators.

      http://checkstyle.sourceforge.net/config_whitespace.html#OperatorWrap
    -->
    <module name="OperatorWrap"/>

    <!--
      Checks that the outer type name and the file name match.

      http://checkstyle.sourceforge.net/config_misc.html#OuterTypeFilename
    -->
    <module name="OuterTypeFilename"/>

    <!--
      Checks for the number of defined types at the "outer" level.

      http://checkstyle.sourceforge.net/config_sizes.html#OuterTypeNumber
    -->
    <module name="OuterTypeNumber"/>

    <!--
      This check makes sure that all package annotations are in the
      package-info.java file.

      http://checkstyle.sourceforge.net/config_annotation.html#PackageAnnotation
    -->
    <module name="PackageAnnotation"/>

    <!--
      Ensures there is a package declaration and (optionally) in the correct
      directory.

      http://checkstyle.sourceforge.net/config_coding.html#PackageDeclaration
    -->
    <module name="PackageDeclaration"/>

    <!--
      Checks that package names conform to a format specified by the format
      property.

      http://checkstyle.sourceforge.net/config_naming.html#PackageName
    -->
    <module name="PackageName"/>

    <!--
      Disallow assignment of parameters.

      http://checkstyle.sourceforge.net/config_coding.html#ParameterAssignment
    -->
    <module name="ParameterAssignment"/>

    <!--
      Checks that parameter names conform to a format specified by the format
      property.

      http://checkstyle.sourceforge.net/config_naming.html#ParameterName
    -->
    <module name="ParameterName">
      <property name="format" value="^([a-z][a-z0-9_]*|_)$"/>
    </module>

    <!--
      Checks the number of parameters that a method or constructor has.

      http://checkstyle.sourceforge.net/config_sizes.html#ParameterNumber
    -->
    <module name="ParameterNumber">
      <property name="max" value="10"/>
    </module>

    <!--
      Checks the padding of parentheses; that is whether a space is required
      after a left parenthesis and before a right parenthesis, or such spaces
      are forbidden, with the exception that it does not check for padding of
      the right parenthesis at an empty for iterator.

      http://checkstyle.sourceforge.net/config_whitespace.html#ParenPad
    -->
    <module name="ParenPad"/>

    <!--
      Checks for imports that are redundant.

      http://checkstyle.sourceforge.net/config_imports.html#RedundantImport
    -->
    <module name="RedundantImport"/>

    <!--
      Checks for redundant modifiers in interface and annotation definitions,
      final modifier on methods of final classes, inner interface declarations
      that are declared as static, non public class constructors and enum
      constructors, nested enum definitions that are declared as static.

      http://checkstyle.sourceforge.net/config_modifier.html#RedundantModifier
    -->
    <module name="RedundantModifier"/>

    <!--
      Checks that code doesn't rely on the "this" default.

      http://checkstyle.sourceforge.net/config_coding.html#RequireThis
    -->
    <module name="RequireThis"/>

    <!--
      Checks the placement of right curly braces.

      http://checkstyle.sourceforge.net/config_blocks.html#RightCurly
    -->
    <module name="RightCurly"/>

    <!--
      Checks line wrapping with separators.

      http://checkstyle.sourceforge.net/config_whitespace.html#SeparatorWrap
    -->
    <module name="SeparatorWrap">
      <!-- Require that commas appear at the end of lines (if they appear) -->
      <property name="tokens" value="COMMA"/>
      <property name="option" value="eol"/>
    </module>
    <module name="SeparatorWrap">
      <!-- Require that dots appear at the start of lines (if they appear) -->
      <property name="tokens" value="DOT"/>
      <property name="option" value="nl"/>
    </module>

    <!--
      Checks for overly complicated boolean expressions.

      http://checkstyle.sourceforge.net/config_coding.html#SimplifyBooleanExpression
    -->
    <module name="SimplifyBooleanExpression"/>

    <!--
      Checks for overly complicated boolean return statements.

      http://checkstyle.sourceforge.net/config_coding.html#SimplifyBooleanReturn
    -->
    <module name="SimplifyBooleanReturn"/>

    <!--
      Checks that non-whitespace characters are separated by no more than one
      whitespace.

      http://checkstyle.sourceforge.net/config_whitespace.html#SingleSpaceSeparator
    -->
    <module name="SingleSpaceSeparator"/>

    <!--
      Checks that static, non-final variable names conform to a format
      specified by the format property.

      http://checkstyle.sourceforge.net/config_naming.html#StaticVariableName
    -->
    <module name="StaticVariableName">
      <property name="format" value="^[A-Z][_A-Z0-9]*$"/>
    </module>

    <!--
      Checks that string literals are not used with == or !=.

      http://checkstyle.sourceforge.net/config_coding.html#StringLiteralEquality
    -->
    <module name="StringLiteralEquality"/>

    <!--
      Restricts throws statements to a specified count (default = 4).

      http://checkstyle.sourceforge.net/config_design.html#ThrowsCount
    -->
    <module name="ThrowsCount"/>

    <!--
       The check to ensure that requires that comments be the only thing on a
       line.

       http://checkstyle.sourceforge.net/config_misc.html#TrailingComment
    -->
    <module name="TrailingComment"/>

    <!-- Restrict class names -->
    <module name="TypeName">
      <property name="format" value="^[A-Z][a-zA-Z0-9_]*$"/>
      <property name="tokens" value="CLASS_DEF"/>
    </module>

    <!-- Restrict interface type names -->
    <module name="TypeName">
      <property name="format" value="^[A-Z][a-zA-Z0-9_]*(Kind|Type)$"/>
      <property name="tokens" value="INTERFACE_DEF"/>
    </module>

    <!--
      Checks the padding of parentheses for typecasts.

      http://checkstyle.sourceforge.net/config_whitespace.html#TypecastParenPad
    -->
    <module name="TypecastParenPad"/>

    <!--
      Detects uncommented main methods.

      http://checkstyle.sourceforge.net/config_misc.html#UncommentedMain
    -->
    <module name="UncommentedMain">
      <property name="excludedClasses" value="Main$"/>
    </module>

    <!--
      Checks for unused import statements.

      http://checkstyle.sourceforge.net/config_imports.html#UnusedImports
    -->
    <module name="UnusedImports"/>

    <!--
      Checks that long constants are defined with an upper ell.

      http://checkstyle.sourceforge.net/config_misc.html#UpperEll
    -->
    <module name="UpperEll"/>

    <!--
      Checks visibility of class members.

      http://checkstyle.sourceforge.net/config_design.html#VisibilityModifier
    -->
    <module name="VisibilityModifier">
      <property name="protectedAllowed" value="true"/>
    </module>

    <!--
      Checks that a token is followed by whitespace, with the exception that it
      does not check for whitespace after the semicolon of an empty for iterator.

      http://checkstyle.sourceforge.net/config_whitespace.html#WhitespaceAfter
    -->
    <module name="WhitespaceAfter"/>

    <!--
      Checks that a token is surrounded by whitespace.

      http://checkstyle.sourceforge.net/config_whitespace.html#WhitespaceAround
    -->
    <module name="WhitespaceAround"/>
  </module>

  <!--
    Checks for long source files.

    http://checkstyle.sourceforge.net/config_sizes.html#FileLength
  -->
  <module name="FileLength">
    <property name="max" value="1500"/>
  </module>

  <!--
    Checks to see if a file contains a tab character.

    http://checkstyle.sourceforge.net/config_whitespace.html#FileTabCharacter
  -->
  <module name="FileTabCharacter"/>

  <!--
    Checks that all packages have a package documentation.

    http://checkstyle.sourceforge.net/config_javadoc.html#JavadocPackage
  -->
  <module name="JavadocPackage"/>

  <!--
    Checks that there is a newline at the end of each file.

    http://checkstyle.sourceforge.net/config_misc.html#NewlineAtEndOfFile
  -->
  <module name="NewlineAtEndOfFile"/>

  <!-- Check license headers of all Java files -->
  <module name="RegexpHeader">
    <property name="header" value="^/\*\n \* Copyright Â© \d\d\d\d .*\n"/>
    <property name="charset" value="UTF-8"/>
  </module>

  <!--
   The TranslationCheck class helps to ensure the correct translation of
   code by checking property files for consistency regarding their keys.

   http://checkstyle.sourceforge.net/config_misc.html#Translation
  -->
  <module name="Translation"/>

  <!--
    Detects duplicated keys in properties files.

    http://checkstyle.sourceforge.net/config_misc.html#UniqueProperties
  -->
  <module name="UniqueProperties"/>

</module>